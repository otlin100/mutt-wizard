#!/usr/bin/env sh
# Sync mail and give notification if there is new mail.

# Checks for internet connection and set notification script.
ping -q -c 1 1.1.1.1 > /dev/null || exit
command -v notify-send >/dev/null || echo "Note that \`libnotify\` or \`libnotify-send\` should be installed for pop-up mail notifications with this script."

export DISPLAY=:0.0

logfile="$XDG_CONFIG_HOME"/mutt/.mbsync.log
logfile_old="$XDG_CONFIG_HOME"/mutt/.mbsync.log_old

clear
[ -z "$logfile_old" ] && rm "$logfile_old"
mv "$logfile" "$logfile_old"
touch "$logfile"

notify() { notify-send "mutt-wizard" "ðŸ“¬ $2 new mail(s) in \`$1\` account." ;}

echo " ðŸ”ƒ" > /tmp/imapsyncicon_$USER
pkill -RTMIN+12 i3blocks

# Run mbsync. You can feed this script different settings.
accounts=$(ls "$XDG_DATA_HOME"/mail | grep """$@")
echo "$accounts" | xargs --max-procs=4 -n 1 -I account mbsync -c ~/.config/mbsync/config -V account 2>&1 | tee "$logfile"

rm -f /tmp/imapsyncicon_$USER
pkill -RTMIN+12 i3blocks

# Check all accounts/mailboxes for new mail. Notify if there is new content.
# for account in "$HOME/.local/share/mail/"*
for acc in $accounts
do
	newcount=$(find "$XDG_DATA_HOME/mail/$acc/INBOX/new/" "$XDG_DATA_HOME/mail/$acc/Inbox/new/" "$XDG_DATA_HOME/mail/$acc/inbox/new/" -type f -newer "$HOME/.config/mutt/.mailsynclastrun" 2> /dev/null | wc -l)
	[ "$newcount" -gt "0" ] && notify "$acc" "$newcount" &
done
notmuch new 2>/dev/null

#Create a touch file that indicates the time of the last run of mailsync
touch "$HOME/.config/mutt/.mailsynclastrun"
